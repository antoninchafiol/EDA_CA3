@page "/drug"
@using System.Net.Http.Json

<h3>Drug List</h3>

<button @onclick="LoadDrugs">Load Drugs</button>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (drugs != null && drugs.Any())
{
    <table>
        <tr>
            <th>Drug Name</th>
            <th>Count</th>
        </tr>
        @foreach (var drug in drugs)
        {
            <tr>
                <th>@drug.Name</th>
                <th>@drug.Count</th>
            </tr>
        }
        
    </table>

}
else if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}

@code {
    // <th>Route</th>
    // <th>More Info</th>


    private List<Drugs>? drugs = null;
    private string? errorMessage = null;
    private bool isLoading = false;

    private async Task LoadDrugs()
    {
        isLoading = true;
        errorMessage = null;
        drugs = null;

        try
        {
            using var httpClient = new HttpClient();
            string url = "https://api.fda.gov/drug/label.json?count=openfda.brand_name.exact&limit=100";
            var response = await httpClient.GetFromJsonAsync<DrugListResponse>(url);

            if (response != null && response.Results != null)
            {
                drugs = response.Results.Select(r => new Drugs { Name = r.Term, Count = r.Count }).ToList();
            }
            else
            {
                errorMessage = "No drugs found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error fetching drug list: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    // API Response Models
    private class DrugListResponse
    {
        public List<DrugResponse>? Results { get; set; } // Matches the "results" array in the API response
    }

    private class DrugResponse
    {
        public string Term { get; set; } = string.Empty; // Drug name
        public int Count { get; set; } // Number of occurrences
    }

    private class Drugs
    {
        public string Name { get; set; } = string.Empty;
        public int Count { get; set; }
    }
}
