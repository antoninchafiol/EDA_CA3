@page "/drug"
@using CA3.Client.Pages

<h3>Drug List</h3>

<button class="btn btn-primary" @onclick="LoadDrugs" disabled="@isLoading">
    @(isLoading ? "Loading..." : "Load Drugs")
</button>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (drugs != null && drugs.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Brand Name</th>
                <th>Generic Name</th>
                <th>Purpose</th>
                <th>Warnings</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var drug in drugs)
            {
                <tr>
                    <td>@string.Join(", ", drug.Openfda?.BrandName ?? new List<string>())</td>
                    <td>@string.Join(", ", drug.Openfda?.GenericName ?? new List<string>())</td>
                    <td>@string.Join("<br>", drug.Purpose ?? new List<string>())</td>
                    <td>@string.Join("<br>", drug.Warnings ?? new List<string>())</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}
else
{
    <p>No drugs found.</p>
}

@code {
    [Inject]
    private DrugService DrugService { get; set; } = default!;

    private List<FullDrug> drugs = new();
    private bool isLoading = false;
    private string? errorMessage;

    private async Task LoadDrugs()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            drugs = await DrugService.GetDrugsAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading drugs: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
