@page "/drug"
@using CA3.Client.Pages
@using Microsoft.AspNetCore.Components.QuickGrid


<h3>Drug List</h3>
<button class="btn btn-primary" @onclick="LoadDrugs" disabled="@isLoading">
             @(isLoading ? "Loading..." : "Load Drugs")    
</button>
<br>
<br>
<br>
@if (drugs != null && drugs.Any())
{
    <QuickGrid Items="@drugs.AsQueryable()" Pagination="pagination">
    <PropertyColumn Property="@(p => string.Join( ",", p.Openfda.GenericName.ToArray() ))" Sortable="true" Title="Generic Names" />
    <PropertyColumn Property="@(p => string.Join( ",", p.Openfda.ApplicationNumber.ToArray() ))" Sortable="true" Title="Application Number" />
    <Paginator State="pagination" />
</QuickGrid>

}
else if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}

@code {
    [Inject]
    private DrugService DrugService { get; set; } = default!;
    PaginationState pagination = new PaginationState { ItemsPerPage = 2 };
    private List<FullDrug> drugs = new();

    private bool isLoading = false;
    private string? errorMessage;

    private async Task LoadDrugs()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            drugs = await DrugService.GetDrugsAsync();
            // drugs = temp_drugs.AsQueryable();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading drugs: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
